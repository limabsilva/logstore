// <auto-generated />
using System;
using HungryPizza.Persistence.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HungryPizza.Persistence.Migrations
{
    [DbContext(typeof(DBHungryPizzaContext))]
    [Migration("20220828225500_IncluindoPriceItem")]
    partial class IncluindoPriceItem
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("HungryPizza.Domain.Entities.ClientEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ClientID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("City");

                    b.Property<string>("Complement")
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Complement");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("Name");

                    b.Property<string>("Neighborhood")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Neighborhood");

                    b.Property<int?>("Number")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("Number");

                    b.Property<DateTime?>("Register")
                        .HasColumnType("datetime2");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("State");

                    b.Property<string>("StreetName")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("StreetName");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasColumnType("nvarchar(11)")
                        .HasColumnName("Telephone");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("ZipCode");

                    b.HasKey("Id");

                    b.HasIndex("Telephone")
                        .IsUnique();

                    b.ToTable("Client", (string)null);
                });

            modelBuilder.Entity("HungryPizza.Domain.Entities.ItemFlavorsEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ItemFlavorsID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("OrderItemID")
                        .HasColumnType("int");

                    b.Property<int>("PizzaFlavorID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Register")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("OrderItemID");

                    b.HasIndex("PizzaFlavorID");

                    b.ToTable("ItemFlavors", (string)null);
                });

            modelBuilder.Entity("HungryPizza.Domain.Entities.OrderEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("OrderID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ClientID")
                        .HasColumnType("int");

                    b.Property<string>("DeliveryAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("DeliveryAddress");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("Description");

                    b.Property<decimal>("PriceTotal")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("PriceTotal");

                    b.Property<DateTime?>("Register")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ClientID");

                    b.ToTable("Order", (string)null);
                });

            modelBuilder.Entity("HungryPizza.Domain.Entities.OrderItemEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("OrderItemID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("Comments");

                    b.Property<int>("OrderID")
                        .HasColumnType("int");

                    b.Property<decimal>("PriceItem")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("PriceItem");

                    b.Property<DateTime?>("Register")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("OrderID");

                    b.ToTable("OrderItem", (string)null);
                });

            modelBuilder.Entity("HungryPizza.Domain.Entities.PizzaFlavorEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PizzaFlavorID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool?>("Available")
                        .HasColumnType("bit");

                    b.Property<string>("Flavor")
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("Flavor");

                    b.Property<string>("Ingredients")
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("Ingredients");

                    b.Property<DateTime?>("Register")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("PizzaFlavor", (string)null);
                });

            modelBuilder.Entity("HungryPizza.Domain.Entities.PizzaFlavorsPriceEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PizzaFlavorsPriceID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("PizzaFlavorEntityID")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("Price");

                    b.Property<DateTime?>("Register")
                        .HasColumnType("datetime2");

                    b.Property<string>("Size")
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Size");

                    b.HasKey("Id");

                    b.HasIndex("PizzaFlavorEntityID");

                    b.ToTable("PizzaFlavorsPrice", (string)null);
                });

            modelBuilder.Entity("HungryPizza.Domain.Entities.ItemFlavorsEntity", b =>
                {
                    b.HasOne("HungryPizza.Domain.Entities.OrderItemEntity", "OrderItem")
                        .WithMany("ItemFlavorsOrderList")
                        .HasForeignKey("OrderItemID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HungryPizza.Domain.Entities.PizzaFlavorEntity", "PizzaFlavor")
                        .WithMany("ItemFlavorsList")
                        .HasForeignKey("PizzaFlavorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrderItem");

                    b.Navigation("PizzaFlavor");
                });

            modelBuilder.Entity("HungryPizza.Domain.Entities.OrderEntity", b =>
                {
                    b.HasOne("HungryPizza.Domain.Entities.ClientEntity", "Client")
                        .WithMany("Orders")
                        .HasForeignKey("ClientID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("HungryPizza.Domain.Entities.OrderItemEntity", b =>
                {
                    b.HasOne("HungryPizza.Domain.Entities.OrderEntity", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("HungryPizza.Domain.Entities.PizzaFlavorsPriceEntity", b =>
                {
                    b.HasOne("HungryPizza.Domain.Entities.PizzaFlavorEntity", "PizzaFlavorEntity")
                        .WithMany("PizzaFlavorsPrices")
                        .HasForeignKey("PizzaFlavorEntityID");

                    b.Navigation("PizzaFlavorEntity");
                });

            modelBuilder.Entity("HungryPizza.Domain.Entities.ClientEntity", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("HungryPizza.Domain.Entities.OrderEntity", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("HungryPizza.Domain.Entities.OrderItemEntity", b =>
                {
                    b.Navigation("ItemFlavorsOrderList");
                });

            modelBuilder.Entity("HungryPizza.Domain.Entities.PizzaFlavorEntity", b =>
                {
                    b.Navigation("ItemFlavorsList");

                    b.Navigation("PizzaFlavorsPrices");
                });
#pragma warning restore 612, 618
        }
    }
}
